<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v2.2"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.2 https://jqassistant.github.io/jqassistant/current/schema/jqassistant-rule-v2.2.xsd">


    <concept id="jakarta-jee-transaction:TransactionalMethodByAnnotatedMethod">
        <providesConcept refId="jee-transaction:TransactionalMethod" />
        <description>
            Labels all methods which are annotated with "jakarta.transaction.Transactional" with "JEE" and "Transactional".
        </description>
        <cypher><![CDATA[
           MATCH
             (type:Type)-[:DECLARES]->(transactionalMethod:Method),
             (transactionalMethod:Method)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(annotationType:Type)
           WHERE
             annotationType.fqn="jakarta.transaction.Transactional"
           AND NOT
             transactionalMethod.visibility = "private"
           SET
             transactionalMethod:JEE:Transactional
           RETURN
             type as Type, transactionalMethod as TransactionalMethod
        ]]></cypher>
    </concept>

    <concept id="jakarta-jee-transaction:TransactionalMethodByAnnotatedClass">
        <providesConcept refId="jee-transaction:TransactionalMethod" />
        <description>
            Labels methods of classes which are directly or indirectly annotated with "jakarta.transaction.Transactional" with "JEE" and "Transactional".
        </description>
        <cypher><![CDATA[
           MATCH
             (transactionalClass:Type)-[:EXTENDS|IMPLEMENTS*0..]->(:Type)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(annotationType:Type),
             (transactionalClass)-[:DECLARES]->(transactionalMethod:Method)
           WHERE
             annotationType.fqn="jakarta.transaction.Transactional"
           AND NOT (
               transactionalMethod:Constructor
               OR (transactionalMethod.static IS NOT NULL and transactionalMethod.static)
               OR transactionalMethod.visibility = "private"
             )
           SET
             transactionalMethod:JEE:Transactional
           RETURN
             transactionalClass as TransactionalClass, collect(transactionalMethod) as TransactionalMethods
        ]]></cypher>
    </concept>
    
</jqassistant-rules>